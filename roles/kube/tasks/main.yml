- name: Check kube config in user home
  stat:
    path: "{{ kube_config_in_home_path }}"
  register: kube_config_in_home_stat

- name: Check kube config in ansible artifacts dir
  stat:
    path: "{{ kube_config_in_ansible_artifacts_path }}"
  register: kube_config_in_ansible_stat

- name: Check kube config in user custom directory
  stat:
    path: "{{ kube_config_in_user_custom_dir_path }}"
  register: kube_config_in_user_custom_dir_path_stat

#remove
- debug:
    var: kube_config_in_home_stat

- debug:
    var: kube_config_in_ansible_stat

- debug:
    var: kube_config_in_user_custom_dir_path_stat
#remove

- name: Fail if no kube config found
  fail:
    msg: "Kube config is not found in both '{{ kube_config_in_home_path }}' and {{ kube_config_in_ansible_artifacts_path }}"
  when: (kube_config_in_home_stat.stat.exists == False and kube_config_in_ansible_stat.stat.exists == False and kube_config_in_user_custom_dir_path_stat.stat.exists == False)

- name: Make sure destination kube directory in user home exists
  file:
    path: "{{ kube_dir_in_home_path }}"
    state: directory

- name: Copy kube config from ansible artifacts to user home
  copy:
    src: "{{ kube_config_in_ansible_artifacts_path }}"
    dest: "{{ kube_config_in_home_path }}"
  when: (kube_config_in_home_stat.stat.exists == False and kube_config_in_ansible_stat.stat.exists == True)

- name: Copy kube config from user custom directory to user home
  copy:
    src: "{{ kube_config_in_user_custom_dir_path_stat }}"
    dest: "{{ kube_config_in_home_path }}"
  when: (kube_config_in_home_stat.stat.exists == False and kube_config_in_user_custom_dir_path_stat.stat.exists == True)

- name: Get helm tiller status
  k8s_facts:
    kind: Deployment
    label_selectors:
      - app = helm
      - name = tiller
    namespace: kube-system
  register: tiller

- name: Install helm tiller
  import_tasks: helm-tiller.yml
  vars:
    tiller_state: present
  when: tiller.resources | length == 0
